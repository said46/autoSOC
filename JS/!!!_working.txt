function delay(ms) {
    return new Promise(resolve => setTimeout(resolve, ms));
}

async function optimizedChangeHandler() {
    var ddType = $('#OverrideTypeId').data('kendoDropDownList');
    var ddMethod = $('#OverrideMethodId').data('kendoDropDownList');
    var typeElement = $('#OverrideTypeId')[0];
    
    console.log('Initial method items:', ddMethod.dataItems().length);
    
    // Get the change handler
    var typeEvents = $._data(typeElement, 'events');
    if (typeEvents && typeEvents.change && typeEvents.change[0]) {
        var changeHandler = typeEvents.change[0].handler;
        
        // Set the value
        ddType.value(2);
        
        // Create a comprehensive event object
        var event = $.Event('change', { 
            bubbles: true,
            cancelable: true
        });
        Object.assign(event, {
            target: typeElement,
            currentTarget: typeElement,
            sender: ddType,
            value: 2,
            previousValue: ddType._previousValue
        });
        
        // Execute the handler
        changeHandler.call(typeElement, event);
        
        await delay(1000);
        console.log('After optimized execution:', ddMethod.dataItems().length);
        console.log('Method data:', ddMethod.dataItems());
    }
}

optimizedChangeHandler();